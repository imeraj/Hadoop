use ecommerce;
add jar /home/acadgild/hive/hive-hcatalog-core-0.14.0.jar;
set hive.exec.dynamic.partition.mode=nonstrict;


****************************************************************************
			DDL
****************************************************************************
CREATE EXTERNAL TABLE prod_details(
  id string COMMENT 'from deserializer',
  prod_id string COMMENT 'from deserializer',
  category string COMMENT 'from deserializer')
ROW FORMAT SERDE
  'org.apache.hadoop.hive.hbase.HBaseSerDe'
STORED BY
  'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES (
  'hbase.columns.mapping'=':key,prod_details:id,prod_details:category',
  'serialization.format'='1')
TBLPROPERTIES (
  'hbase.table.name'='production_category'
)

CREATE TABLE products_info
_raw(

id STRING,

name STRING,

reseller STRING,

category STRING,

price BIGINT,

discount FLOAT,

profit_percent FLOAT

)

PARTITIONED BY(

rptg_dt STRING

)

ROW FORMAT SERDE 'org.apache.hive.hcatalog.data.JsonSerde';




CREATE TABLE products_info_stg

(

product_id STRING,

product_name STRING,

reseller STRING,

category STRING,

price BIGINT,

discount FLOAT,

profit_percent FLOAT

)

PARTITIONED BY (

rptg_dt STRING

)

CLUSTERED BY (
product_id)
INTO 8 BUCKETS
STORED AS ORC;





CREATE TABLE products_info_excp

(

product_id STRING,

product_name STRING,

reseller STRING,

category STRING,

price BIGINT,

discount FLOAT,

profit_percent FLOAT,

rule_failed STRING

)

PARTITIONED BY (

rptg_dt STRING

)
CLUSTERED BY (
product_id)
INTO 8 BUCKETS


STORED AS ORC;




CREATE TABLE products_info_core

(

product_id STRING,

product_name STRING,

reseller STRING,

category STRING,

price BIGINT,

discount FLOAT,

profit_percent FLOAT

)

PARTITIONED BY (

rptg_dt STRING

)
CLUSTERED BY
(
product_id)
INTO 8 BUCKETS
STORED AS ORC;
